## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[i]
}
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[i])
}
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
print(currentFile[1])
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1])
}
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1,1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
View(myFile2)
View(myFile2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1,1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
View(myFile2)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", pollutant="nitrate", id=2:30)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1,1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", pollutant="nitrate", id=2:30)
View(myFile2)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", "nitrate", 1:10)
View(myFile2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
#for (i in id){
#  print(currentFile[i$pollutant])
#}
print currentFile$pollutant
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile$pollutant
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
print currentFile[1,1]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
//print currentFile[1,1]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
setwd("C:/dev/coursera/getdata-008/quiz3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf", "cookbook.pdf")
myFile <- read.csv("Fss06hid.csv")
View(myfile)
myfile <- Nothing
myfile <- 0
myFile2 <- 0
View(myFile)
myFileSlice <- myFile(myFile$AGS==6,)
myFileSlice <- myFile[myFile$AGS==6,]
View(myFileSlice)
myFileSlice2 <- myFileSlice2[!is.na(MyFileSlice2)]
myFileSlice2 <- myFileSlice[!is.na(MyFileSlice)]
myFileSlice2 <- myFileSlice[!is.na(myFileSlice)]
myFileSlice2 <- myFileSlice[!is.na(myFileSlice$AGS),]
View(myFileSlice2)
View(myFileSlice2)
myFileSlice3 <- myFileSlice2[myFileSlice2!ACR==3]
myFileSlice3 <- myFileSlice2[myFileSlice2$ACR==3]
View(myFileSlice3)
myFileSlice3 <- myFileSlice2[myFileSlice2$ACR==3, ]
View(myFileSlice3)
myFile$agricultureLogical = 5
View(myFile)
View(myFile)
head(myFile)
myFile$agricultureLogical = ifelse(myFile$ACR==3 && myFile$AGS==6, TRUE, FALSE)
head(myFile)
which()
? which()
myWhich <- which(myFile$agricultureLogical)
myWhich <- which(myFile$agricultureLogical, arr.ind = TRUE)
myWhich <- which(myFile$agricultureLogical, arr.ind = FALSE)
myWhich <- which(myFile.189)
myWhich <- which(myFile.188)
install.packages("jpeg")
library(jpeg)
View(myFileSlice3)
View(myFileSlice3)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "jeff.jpg")
img <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"))
setwd("C:/dev/coursera/getdata-008/quiz3")
img <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"))
img <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"), TRUE)
img <- readJPEG(system.file("img", "JohnHenryCulbertson.jpg", package="jpeg"), TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "country.csv")
table1 <- read.csv("GDP.csv")
table2 <- read.csv("country.csv")
View(table1)
View(table2)
? read.csv
table1 <- read.csv("GDP.csv", skip=4)
View(table1)
table3 <- merge(table1, table2, by.x="X", by.y="CountryCode")
View(table3)
table4 <- table3[order(table3$X.4)]
table4 <- table3[order(table3.5)]
table4 <- table3[order(table3[5]),]
View(table4)
table4$GDP = as.integer(table4[5])
table1new <- read.csv("GDP.csv", skip=4, na.strings="..")
View(table1new)
View(table1new)
table1new <- read.csv("GDP.csv", skip=4, na.strings="..", colClasses=c("character", "integer", NA, "Character", "integer", NA, NA, NA, NA, NA))
table1new <- read.csv("GDP.csv", skip=4, na.strings="..", colClasses=c("character", "integer", NA, "Character", "numeric", NA, NA, NA, NA, NA))
table1new <- read.csv("GDP.csv", skip=4, na.strings="..", colClasses=c("character", "integer", NA, "Character", "numeric", NA, NA, NA, NA, NA))
table1new <- read.csv("GDP2.csv", skip=4, na.strings="..", colClasses=c("character", "integer", NA, "Character", "numeric", NA, NA, NA, NA, NA))
table1new <- read.csv("GDP2.csv", skip=4, na.strings="..")
View(table1new)
table1new <- read.csv("GDP2.csv", na.strings="..")
View(table1new)
View(table1new)
table1new <- read.csv("GDP2.csv", na.strings="..", header=FALSE)
View(table1new)
table3new <- merge(table1new, table2, by.x="V1", by.y="CountryCode")
View(table3new)
View(table3new)
table4new <- table3new[order(table3new[5]),]
View(table4new)
table1newer <- read.csv("GDP3.csv", na.strings="..", header=TRUE)
View(table4new)
View(table1newer)
table1newer <- read.csv("GDP3.csv", na.strings="..", header=FALSE)
View(table1newer)
table3newer <- merge(table1newer, table2, by.x="V1", by.y="CountryCode")
View(table3newer)
View(table3newer)
table4newer <- table3newer[order(table3newer[5]),]
View(table4newer)
table1newer <- read.csv("GDP3.csv", na.strings="..", header=FALSE)
table3newer <- merge(table1newer, table2, by.x="V1", by.y="CountryCode")
table4newer <- table3newer[order(table3newer[5]),]
View(table4newer)
table1newer <- read.csv("GDP3.csv", na.strings="..", header=FALSE)
View(table1newer)
table1newer$GDP = as.integer(table1newer$v5)
table1newer$GDP = 5
table3newer <- merge(table1newer, table2, by.x="V1", by.y="CountryCode")
table4newer <- table3newer[order(table3newer[5]),]
View(table4newer)
View(table4newer)
?ddply
? ddply
install.packages("plyr")
library(plyr)
? ddply
myAvg <- ddply(table4newer, .(Income.Group), summarize, avg=mean)
myAvg <- ddply(table4newer, .(Income.Group), summarize, avg=mean())
myAvg <- ddply(table4newer, .(Income.Group), summarize, avg=mean(count))
View(table4newer)
tapply(table4newer$V5, table4newer$9)
tapply(table4newer$V5, table4newer[9],sum)
table5 <- table4newer[!is.na(table4newer$V5),]
View(table5)
table6 <- table5[!is.na(table5$V3),]
View(table6)
table6 <- table5[!is.na(table5$V2),]
tapply(table4newer$V5, table4newer[9],sum)
tapply(table6$V5, table6[9],sum)
tapply(table6$V5, table6[9],mean)
View(table6)
tapply(table6$V2, table6[9],mean)
? cut
table6$rankinggroup = cut(table6$v2, 5)
table6$rankinggroup = cut(table6$v2, breaks=5)
table6$ranking = as.integer(table6$v2)
? transform
transform(table6, V2 = as.numeric(V2))
table7 <- transform(table6, V2 = as.numeric(V2)))
table7 <- transform(table6, V2 = as.numeric(V2))
View(table7)
table7$rankinggroup = cut(table7$v2, breaks=5)
table7$rankinggroup = cut(table7$v2, breaks=quantile(table7$v2))
sapply(table7, mode)
View(table7)
install.packages("Hmisc")
library(Hmisc)
table7$rankgroup = cut2(table7$V2, g=5)
View(table7)
table8 <- table7(table7[9] == 'Lower middle income',)
table8 <- table7[table7[9] == 'Lower middle income',]
View(table8)
