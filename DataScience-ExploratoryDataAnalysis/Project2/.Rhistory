for (i in id){
print(currentFile[1,1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", pollutant="nitrate", id=2:30)
View(myFile2)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", "nitrate", 1:10)
View(myFile2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
#for (i in id){
#  print(currentFile[i$pollutant])
#}
print currentFile$pollutant
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile$pollutant
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
print currentFile[1,1]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
//print currentFile[1,1]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "Fss06hid.csv")
table1 <- read.csv("Fss06hid.csv")
View(table1)
tablenames <- names(table1)
tablenames1 <- strsplit(tablenames, "wgtp")
tablenames1[0]
tablenames(0)
tablenames1(0)
tablenames1[0]
tablenames1[1]
tablenames1[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
table2 <- read.csv("GDP.csv")
View(table2)
table 3 <- read.csv("GDP.csv", skip=4)
table3 <- read.csv("GDP.csv", skip=4)
View(table3)
View(table3)
gsub(",", "", table3[,table3[5]])
myfunc <- function(x){gsub(",", "", x)}
table4 <- sapply(table3[5], FUN=myfunc)
table4 <- sapply(table4, FUN=str_trim)
library(stringr)
table4 <- sapply(table4, FUN=str_trim)
table4 <- sapply(table3[5], FUN=myfunc)
avg <- sapply(table4, FUN=mean)
View(table3)
View(table4)
View(table3)
grep("^United", table3[5])
val <- grep("^United", table3[,5])
countryNames <- table3[,5]
head(countryNames)
countryNames <-table3[,4]
head(countrynames)
head(countryNames)
grep("^United", countryNames)
grep("United$", countryNames)
grep("*United", countryNames)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "country.csv")
country <- read.csv("country.csv")
View(country)
View(table3)
View(country)
merged <- merge(country, table3, by.x="CountryCode", by.y="X")
View(merged)
fycol <- merged["Special.Notes"]
View(fycol)
grep("Fiscal year end: June 30", fycol)
grep("^Fiscal year end: June 30", fycol)
View(fycol)
grep("^Fiscal year end: June 30", fycol)
grep("Fiscal", fycol)
head(fycol)
grep("year", fycol)
grepl("year", fycol)
fycol <- merged[,10]
grep("year", fycol)
grep("Fiscal year end: June 30", fycol)
install.packages("quantmod")
libary(quantmod)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
names(amzn)
amzn[1,0]
cnt <- grep("^2012-", amzn[,0])
firstcol <- amzn[,0]
View(firstcol)
cnt <- grep("^2012", firstcol)
names(firstcol)
foo = c(firstcol)
View(foo)
grep("2012", foo)
type(foo)
as.string(foo)
str(foo)
? getSymbols
View(amzn)
View(amzn)
foo <- amzn[,"row.names"]
View(foo)
View(foo)
foo.names = c("datadate")
View(foo)
rownames(foo)
rownames(foo)<-c("datadate")
View(foo)
head(foo)
foo
View(amzn)
grep("^2012", amzn[,0])
grep("^2012", amzn)
grep("^2012", amzn[0])
names(amzn)
rownames(amzn)
amzn.names[0]
amzn[0]
amzn[,0]
grep("2012", amzn[,0])
write.csv(amzn, "amzn.csv")
? write.csv
write.csv(amzn, "amzn2.csv, row.names=TRUE")
write.csv(amzn, "amzn2.csv", row.names=TRUE)
install.packages("lattice")
library(lattice)
install.packages("ggplot2")
library(ggplot2)
setwd("C:/dev/coursera/DataScience-ExploratoryDataAnalysis/Project2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
plot1data <- aggregate(NEI$Emissions, by = list(year = NEI$year), FUN = "sum")
barplot(plot1data$x, names.arg=plot1data$year, main="Total PM25 Emissions in USA")
opt <- options("scipen" = 20)
##op <- par(mar = c(5,7,4,2) + 0.1) ## extra margin to accommodate tick labs
##x <- rnorm(20)^2 * 10000000
##plot(x, las = 1, ylab = "")       ## no y-axis label
##title(ylab = "label", line = 5.5) ## need to plot the axis label
par(op)
options(opt)
barplot(plot1data$x, names.arg=plot1data$year, main="Total PM25 Emissions in USA")
dev.off()
opt <- options("scipen" = 20)
##op <- par(mar = c(5,7,4,2) + 0.1) ## extra margin to accommodate tick labs
##x <- rnorm(20)^2 * 10000000
##plot(x, las = 1, ylab = "")       ## no y-axis label
##title(ylab = "label", line = 5.5) ## need to plot the axis label
par(op)
options(opt)
barplot(plot1data$x, names.arg=plot1data$year, main="Total PM25 Emissions in USA")
opt <- options("scipen" = 20)
op <- par(mar = c(5,7,4,2) + 0.1) ## extra margin to accommodate tick labs
##x <- rnorm(20)^2 * 10000000
##plot(x, las = 1, ylab = "")       ## no y-axis label
##title(ylab = "label", line = 5.5) ## need to plot the axis label
par(op)
options(opt)
barplot(plot1data$x, names.arg=plot1data$year, main="Total PM25 Emissions in USA")
barplot(plot1data$x, names.arg=plot1data$year, main="Total PM25 Emissions in USA")
par(op)
options(opt)
png(file="plot1.png")
opt <- options("scipen" = 20)
op <- par(mar = c(5,7,4,2) + 0.1) ## extra margin to accommodate tick labs
##x <- rnorm(20)^2 * 10000000
##plot(x, las = 1, ylab = "")       ## no y-axis label
##title(ylab = "label", line = 5.5) ## need to plot the axis label
barplot(plot1data$x, names.arg=plot1data$year, main="Total PM25 Emissions in USA")
par(op)
options(opt)
dev.off()
## Bust out the chart.
png(file="plot1.png")
opt <- options("scipen" = 20)
#op <- par(mar = c(5,7,4,2) + 0.1) ## extra margin to accommodate tick labs
##x <- rnorm(20)^2 * 10000000
##plot(x, las = 1, ylab = "")       ## no y-axis label
##title(ylab = "label", line = 5.5) ## need to plot the axis label
barplot(plot1data$x, names.arg=plot1data$year, main="Total PM25 Emissions in USA")
#par(op)
options(opt)
dev.off()
## Filter down to Baltimore city, then grab the sums of each year.
justonezip <- NEI[NEI$fips=="24510",]
plot2data <- aggregate(justonezip$Emissions, by = list(year = justonezip$year), FUN = "sum")
png(file="plot2.png")
barplot(plot2data$x, names.arg=plot2data$year)
dev.off()
## Bust out the chart.
png(file="plot2.png")
opt <- options("scipen" = 20)
barplot(plot2data$x, names.arg=plot2data$year, main="Total PM25 Emissions in Baltimore City")
options(opt)
dev.off()
plot3data <- aggregate(justonezip$Emissions, by = list(year = justonezip$year, type = justonezip$type), FUN = "sum")
library(ggplot2)
qplot(year, x, data=plot3data, facets = . ~ type)
qplot(x, data=plot3data, fill= year, facets = . ~ type)
qplot(year, x, data=plot3data, fill= year, facets = . ~ type)
qplot(year, x, data=plot3data, fill= year, facets = . ~ type)
qplot(year, data=plot3data, fill= x, facets = . ~ type)
ggplot(data=plot3data, aes(x=year, y=x)) + geom_bar(stat="identity")
ggplot(data=plot3data, aes(x=year, y=x), facets = . ~ type) + geom_bar(stat="identity")
ggplot(data=plot3data, aes(x=year, y=x)) + geom_bar(stat="identity") + facet_grid(. ~ type)
ggplot(data=plot3data, aes(x=year, y=x)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + opts(axis.text.x=theme_text(angle=-90))
ggplot(data=plot3data, aes(x=year, y=x)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City")
ggplot(data=plot3data, aes(x=year, y=x)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 45))
View(plot3data)
View(plot3data)
names(plot3data)[3] <- "Emissions"
ggplot(data=plot3data, aes(x=year, y=x)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
ggplot(data=plot3data, aes(x=year, y=Emissions)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
View(plot3data)
ggplot(data=plot3data, aes(x=year, y=Emissions)) + geom_bar() + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
ggplot(data=plot3data, aes(x=year, y=Emissions)) + geom_bar(stat=Emissions) + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
ggplot(data=plot3data, aes(x=year, y=Emissions)) + geom_bar(stat=y) + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
ggplot(data=plot3data, aes(x=year, y=Emissions)) + geom_bar(stat=year) + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
ggplot(data=plot3data, aes(x=year, y=Emissions)) + geom_bar() + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
qplot(data=plot3data, aes(x=year, y=Emissions)) + geom_bar() + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
qplot(data=plot3data, aes(x=year, y=Emissions), geom="bar")  + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
View(plot3data)
qplot(year, Emissions, data=plot3data, geom="bar", facets=. ~ type)
qplot(year, data=plot3data, geom="bar", facets=. ~ type)
qplot(year, data=plot3data, facets=. ~ type) + geom_bar(stat="Emissions")
qplot(year, x, data=plot3data, facets = . ~ type)
qplot(year, Emissions, data=plot3data, facets = . ~ type)
qplot(year, Emissions, data=plot3data, facets = . ~ type) + geom_bar()
qplot(year, Emissions, data=plot3data, facets = . ~ type) + geom_bar(aes(Emissions))
qplot(year, Emissions, data=plot3data, facets = . ~ type) + geom_bar(aes(fill=Emissions), stat="identity")
qplot(year, Emissions, data=plot3data, facets = . ~ type) + geom_bar(aes(fill=Emissions), stat="bin")
qplot(year, Emissions, data=plot3data, facets = . ~ type) + geom_bar(aes(fill=Emissions), stat="identity")
qplot(year, Emissions, data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions), stat="identity")
qplot(year, data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions), stat="identity")
View(plot3data)
qplot(data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions, x=year), stat="identity")
ggplot(data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions, x=year), stat="identity")
qplot(year, Emissions, data=plot3data, facets = . ~ type)
qplot(year, Emissions, data=plot3data)
plot3data$year <- as.string(plot3data$year)
plot3data$year <- as.character(plot3data$year)
plot3data$year <- as.character(plot3data$year)
qplot(year, Emissions, data=plot3data)
qplot(year, Emissions, data=plot3data, facets = . ~ type)
ggplot(data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions, x=year), stat="identity")
qplot(year, Emissions, data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions), stat="identity")
qplot(year, data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions), stat="identity")
qplot(year, data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions), stat="identity") + labs(title="Sources of PM25 Emissions in Baltimore City")
justonezip <- NEI[NEI$fips=="24510",]
plot3data <- aggregate(justonezip$Emissions, by = list(year = justonezip$year, type = justonezip$type), FUN = "sum")
names(plot3data)[3] <- "Emissions"
plot3data$year <- as.character(plot3data$year)
png(file="plot3.png")
#qplot(year, data=plot3data, fill= x, facets = . ~ type)
qplot(year, data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions), stat="identity") + labs(title="Sources of PM25 Emissions in Baltimore City")
##ggplot(data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions, x=year), stat="identity")
##qplot(year, Emissions, data=plot3data, facets = . ~ type)
##qplot(year, Emissions, data=plot3data)
##qplot(year, data=plot3data, facets=. ~ type) + geom_bar(stat="Emissions")
##ggplot(data=plot3data, aes(x=year, y=Emissions), geom="bar")  + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
##qplot(data=plot3data, aes(x=year, y=Emissions), geom="bar")  + facet_grid(. ~ type) + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
##ggplot(data=df, aes(x=time, y=total_bill)) + geom_bar(stat="identity")
dev.off()
qplot(year, data=plot3data, facets = . ~ type) + geom_bar(aes(y=Emissions), stat="identity") + labs(title="Sources of PM25 Emissions in Baltimore City") + theme(axis.text.x = element_text(angle = 90))
## Fix column names so later transformations work.
names(SCC)[4] <- "EISector"
## add the activities labels and merge up the training data.
merged_table4 <- sqldf("SELECT NEI.*, SCC.EISector FROM NEI LEFT JOIN SCC ON NEI.SCC=SCC.SCC")
merged_table4 <- sqldf("SELECT * FROM merged_table4 WHERE EISector LIKE '%Coal%' ")
library(sqldf)
## Fix column names so later transformations work.
names(SCC)[4] <- "EISector"
## add the activities labels and merge up the training data.
merged_table4 <- sqldf("SELECT NEI.*, SCC.EISector FROM NEI LEFT JOIN SCC ON NEI.SCC=SCC.SCC")
merged_table4 <- sqldf("SELECT * FROM merged_table4 WHERE EISector LIKE '%Coal%' ")
plot4data <- aggregate(merged_table4$Emissions, by = list(year = merged_table4$year), FUN = "sum")
barplot(plot4data$x, names.arg=plot4data$year)
opt <- options("scipen" = 20)
barplot(plot4data$x, names.arg=plot4data$year, main="Coal combusion-related Emissions in USA")
options(opt)
plot4data <- aggregate(merged_table4$Emissions, by = list(year = merged_table4$year), FUN = "sum")
png(file="plot4.png")
opt <- options("scipen" = 20)
barplot(plot4data$x, names.arg=plot4data$year, main="Coal combusion-related Emissions in USA")
options(opt)
dev.off()
## Fix column names so later transformations work.
names(SCC)[3] <- "ShortName"
names(SCC)[4] <- "EISector"
## add the activities labels and merge up the training data.
merged_table <- sqldf("SELECT NEI.*, SCC.ShortName FROM NEI LEFT JOIN SCC ON NEI.SCC=SCC.SCC")
merged_table <- sqldf("SELECT * FROM merged_table WHERE ShortName LIKE '%Highway Veh%' ")
## We only want Baltimore!
justonezip <- merged_table[merged_table$fips=="24510",]
## The chart we want: How have emissions from motor vehicle sources changed from 1999-2008 in Baltimore City?
plot5data <- aggregate(justonezip$Emissions, by = list(year = justonezip$year), FUN = "sum")
## Spit it into a chart!
png(file="plot5.png")
#qplot(year, x, data=plot4data)
barplot(plot5data$x, names.arg=plot5data$year, main="Coal combusion-related Emissions in Baltimore City")
dev.off()
## Spit it into a chart!
png(file="plot5.png")
#qplot(year, x, data=plot4data)
barplot(plot5data$x, names.arg=plot5data$year, main="Motor Vehicle Emissions in Baltimore City")
dev.off()
table_plot6 <- sqldf("SELECT NEI.*, SCC.ShortName FROM NEI LEFT JOIN SCC ON NEI.SCC=SCC.SCC")
table_plot6 <- sqldf("SELECT * FROM table_plot6 WHERE ShortName LIKE '%Highway Veh%' ")
## We only want Baltimore and Los Angeles.
table_plot6 <- sqldf("SELECT * FROM table_plot6 WHERE fips='24510' OR fips='06037'")
## The chart we want:
## 6.Compare emissions from motor vehicle sources in Baltimore City with emissions from motor vehicle sources
## in Los Angeles County, California (fips == "06037"). Which city has seen greater changes over time
## in motor vehicle emissions
plot6data <- aggregate(table_plot6$Emissions, by = list(year = table_plot6$year, zip = table_plot6$fips), FUN = "sum")
qplot(year, data=plot6data, facets = . ~ type) + geom_bar(aes(y=x), stat="identity") + labs(title="Motor Vehicle Sources of PM25 Emissions in Baltimore City and Los Angeles") + theme(axis.text.x = element_text(angle = 90))
qplot(year, data=plot6data, facets = . ~ zip) + geom_bar(aes(y=Emissions), stat="identity") + labs(title="Motor Vehicle Sources of PM25 Emissions in Baltimore City and Los Angeles") + theme(axis.text.x = element_text(angle = 90))
names(plot6data)[3] <- "Emissions"
qplot(year, data=plot6data, facets = . ~ zip) + geom_bar(aes(y=Emissions), stat="identity") + labs(title="Motor Vehicle Sources of PM25 Emissions in Baltimore City and Los Angeles") + theme(axis.text.x = element_text(angle = 90))
plot6data <- aggregate(table_plot6$Emissions, by = list(year = table_plot6$year, zip = table_plot6$fips), FUN = "sum")
names(plot6data)[3] <- "Emissions"
plot6data$year <- as.character(plot6data$year)
qplot(year, data=plot6data, facets = . ~ zip) + geom_bar(aes(y=Emissions), stat="identity") + labs(title="Motor Vehicle Sources of PM25 Emissions in Baltimore City and Los Angeles") + theme(axis.text.x = element_text(angle = 90))
## Spit it into a chart!
png(file="plot6.png")
#qplot(year, x, data=plot4data)
#barplot(plot6data$x, names.arg=plot6data$year)
##qplot(year, x, data=plot6data, facets = . ~ zip)
qplot(year, data=plot6data, facets = . ~ zip) + geom_bar(aes(y=Emissions), stat="identity") + labs(title="Motor Vehicle Sources of PM25 Emissions in Baltimore City and Los Angeles") + theme(axis.text.x = element_text(angle = 90))
dev.off()
