## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
C:\Users\mikeconn\SkyDrive\(coursera)\R-Programming\Assignment1
pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1")
pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata")
myFile <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata")
View(myFile)
View(myfile)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(i)
}
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=1:10)
myFile <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[i]
}
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[i])
}
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
print(currentFile[1])
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1])
}
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1,1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
View(myFile2)
View(myFile2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1,1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
View(myFile2)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", id=2:30)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", pollutant="nitrate", id=2:30)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
for (i in id){
print(currentFile[1,1])
}
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", pollutant="nitrate", id=2:30)
View(myFile2)
myFile2 <- pollutantmean("C:\\Users\\mikeconn\\SkyDrive\\(coursera)\\R-Programming\\Assignment1\\specdata", "nitrate", 1:10)
View(myFile2)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
#for (i in id){
#  print(currentFile[i$pollutant])
#}
print currentFile$pollutant
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile$pollutant
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##for (i in id){
##  print(currentFile[i$pollutant])
##}
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
print currentFile[1,]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
print currentFile[1,1]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
nameOfFile <- paste0(directory, "\\001.csv")
##pollutantmean <- nameOfFile
##currentFile <- read.csv(nameOfFile, colClasses=c(pollutant="character"))
currentFile <- read.csv(nameOfFile)
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
//print currentFile[1,1]
currentFile
## Example Output:
## source("pollutantmean.R")
## pollutantmean("specdata", "sulfate", 1:10)
## ## [1] 4.064
## pollutantmean("specdata", "nitrate", 70:72)
## ## [1] 1.706
## pollutantmean("specdata", "nitrate", 23)
## ## [1] 1.281
}
setwd("C:/dev/coursera/R-Programming/Assignment3")
source("best.R")
best <- function(state, outcome) {
## Read outcome data
data_all <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state is valid
## Logic for validity: if it is in the table.
data_by_state <- data_all[data_all$State == state, ]
if (nrow(data_by_state) == 0){
stop("invalid state")
}
## Check that outcome are valid, and get further subset.
column_number <- -1
if (outcome == "heart attack"){
column_number <- 11
}
else if (outcome == "heart failure"){
column_number <- 17
}
else if (outcome == "pneumonia"){
column_number <- 23
}
else{
stop("invalid outcome")
}
## data_by_state_and_outcome <- data_by_state[data_by_state[]]
## Let's remove the NA's.
bad_rows <- is.na(data_by_state[column_number])
data_by_state_clean <- data_by_state[!bad_rows, ]
## What is the lowest value?
lowest_value <- mapply(min, data_by_state_clean[column_number])
data_lowest_value <- data_by_state_clean[data_by_state_clean[column_number] == lowest_value, ]
## TODO!  Need to sort and show the least alphabetical!
## Pull out the row that has the lowest value.
##data_min <- lapply(data_by_state_clean, min)
## Return hospital name in that state with lowest 30-day death
data_lowest_value$Hospital.Name
## rate
}
source("best.R")
best("MD", "pneumonia")
best("MD", "pneumonia")
View(data_by_state)
View(bad_rows)
View(data_by_state)
bad_rows2 < is.na(data_by_state[12])
bad_rows2 <- is.na(data_by_state[12])
View(bad_rows2)
View(data_by_state_clean)
View(data_by_state_clean)
foo <- data_by_state_clean[column_number]
View(foo)
foo <- data_by_state_clean[column_number]
mapply(min, foo)
best("MD", "pneumonia")
View(data_lowest_value)
str(lowest_value)
View(data_lowest_value)
View(data_by_state_clean)
source("best.R")
best("MD", "pneumonia")
best("MD", "pneumonia")
View(data_by_state_clean)
? min
mapply(min, data_by_state_clean[23])
lapply(min, data_by_state_clean[23])
? lapply
lapply(data_by_state_clean[23], min)
lapply(data_by_state_clean[23], pmin)
lapply(data_by_state_clean[23], max)
View(myFile2)
? by
? gl
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source("submitscript3.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
