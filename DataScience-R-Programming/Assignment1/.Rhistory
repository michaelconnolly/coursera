## Let's figure out what columns we want.
## to-do: below seems non-optimal with memory usage.  Rewrite for efficiency in the future!
columnSulfate <- currentFile["sulfate"]
columnNitrate <- currentFile["nitrate"]
rowsCompleteCases <- complete.cases(columnSulfate, columnNitrate)
## rowsWeWant2 <- rowsCompleteCases[rowsCompleteCases == TRUE]
rowsWeWant2 <- currentFile[rowsCompleteCases, ]
ourvalue <- cor(rowsWeWant2[['sulfate']], rowsWeWant2[['nitrate']])
vectorOutput[i] <- ourvalue
print(vectorOutput[i])
}
vectorOutput
## Example Output:
#   source("corr.R")
#   source("complete.R")
#   cr <- corr("specdata", 150)
#   head(cr)
#
#   ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.2110 -0.0500  0.0946  0.1250  0.2680  0.7630
#
#   cr <- corr("specdata", 400)
#   head(cr)
#
#   ## [1] -0.01896 -0.04390 -0.06816 -0.07589  0.76313 -0.15783
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.1760 -0.0311  0.1000  0.1400  0.2680  0.7630
#
#   cr <- corr("specdata", 5000)
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ##
#
#   length(cr)
#
#   ## [1] 0
#
#   cr <- corr("specdata")
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -1.0000 -0.0528  0.1070  0.1370  0.2780  1.0000
#
#   length(cr)
#
#   ## [1] 323
}
source("corr.R")
setwd("C:/dev/coursera/R-Programming/Assignment1")
source("corr.R")
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
collectionOfCompleteCases <- complete(directory, 1:332)
rowsWeWant <- collectionOfCompleteCases[collectionOfCompleteCases[['nobs']] > threshold, ]
## filter2 <- collectionOfCompleteCases[nobs > threshold]
##rowsWeWant <- collectionOfCompleteCases[filter]
##print(filter)
##countOfCompleteCases <- length(collectionOfCompleteCases)
##vectorOutput <- vector("numeric", length = countOfCompleteCases)
## sorted.cors[sorted.cors[['Freq']] > 0.5 , ]
## print(rowsWeWant)
print(nrow(rowsWeWant))
vectorOutput <- vector("numeric", length = nrow(rowsWeWant))
for (i in seq_along(rowsWeWant)){
## Open the file.
id <- rowsWeWant[i, "id"]
nameOfFile <- sprintf("%s\\%03d.csv", directory, id)
currentFile <- read.csv(nameOfFile)
## Let's figure out what columns we want.
## to-do: below seems non-optimal with memory usage.  Rewrite for efficiency in the future!
columnSulfate <- currentFile["sulfate"]
columnNitrate <- currentFile["nitrate"]
rowsCompleteCases <- complete.cases(columnSulfate, columnNitrate)
## rowsWeWant2 <- rowsCompleteCases[rowsCompleteCases == TRUE]
rowsWeWant2 <- currentFile[rowsCompleteCases, ]
ourvalue <- cor(rowsWeWant2[['sulfate']], rowsWeWant2[['nitrate']])
vectorOutput[i] <- ourvalue
print(vectorOutput[i])
}
vectorOutput
## Example Output:
#   source("corr.R")
#   source("complete.R")
#   cr <- corr("specdata", 150)
#   head(cr)
#
#   ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.2110 -0.0500  0.0946  0.1250  0.2680  0.7630
#
#   cr <- corr("specdata", 400)
#   head(cr)
#
#   ## [1] -0.01896 -0.04390 -0.06816 -0.07589  0.76313 -0.15783
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.1760 -0.0311  0.1000  0.1400  0.2680  0.7630
#
#   cr <- corr("specdata", 5000)
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ##
#
#   length(cr)
#
#   ## [1] 0
#
#   cr <- corr("specdata")
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -1.0000 -0.0528  0.1070  0.1370  0.2780  1.0000
#
#   length(cr)
#
#   ## [1] 323
}
source("corr.R")
corr("specdata", 150)
corr("specdata", 150)
View(collectionOfCompleteCases)
View(rowsWeWant2)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
collectionOfCompleteCases <- complete(directory, 1:332)
rowsWeWant <- collectionOfCompleteCases[collectionOfCompleteCases[['nobs']] > threshold, ]
## filter2 <- collectionOfCompleteCases[nobs > threshold]
##rowsWeWant <- collectionOfCompleteCases[filter]
##print(filter)
##countOfCompleteCases <- length(collectionOfCompleteCases)
##vectorOutput <- vector("numeric", length = countOfCompleteCases)
## sorted.cors[sorted.cors[['Freq']] > 0.5 , ]
## print(rowsWeWant)
print(nrow(rowsWeWant))
vectorOutput <- vector("numeric", length = nrow(rowsWeWant))
##for (i in seq_along(rowsWeWant)){
for (i in 1:nrow(rowsWeWant)){
## Open the file.
id <- rowsWeWant[i, "id"]
nameOfFile <- sprintf("%s\\%03d.csv", directory, id)
currentFile <- read.csv(nameOfFile)
## Let's figure out what columns we want.
## to-do: below seems non-optimal with memory usage.  Rewrite for efficiency in the future!
columnSulfate <- currentFile["sulfate"]
columnNitrate <- currentFile["nitrate"]
rowsCompleteCases <- complete.cases(columnSulfate, columnNitrate)
## rowsWeWant2 <- rowsCompleteCases[rowsCompleteCases == TRUE]
rowsWeWant2 <- currentFile[rowsCompleteCases, ]
ourvalue <- cor(rowsWeWant2[['sulfate']], rowsWeWant2[['nitrate']])
vectorOutput[i] <- ourvalue
print(vectorOutput[i])
}
vectorOutput
## Example Output:
#   source("corr.R")
#   source("complete.R")
#   cr <- corr("specdata", 150)
#   head(cr)
#
#   ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.2110 -0.0500  0.0946  0.1250  0.2680  0.7630
#
#   cr <- corr("specdata", 400)
#   head(cr)
#
#   ## [1] -0.01896 -0.04390 -0.06816 -0.07589  0.76313 -0.15783
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.1760 -0.0311  0.1000  0.1400  0.2680  0.7630
#
#   cr <- corr("specdata", 5000)
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ##
#
#   length(cr)
#
#   ## [1] 0
#
#   cr <- corr("specdata")
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -1.0000 -0.0528  0.1070  0.1370  0.2780  1.0000
#
#   length(cr)
#
#   ## [1] 323
}
? source("corr.R")
corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
collectionOfCompleteCases <- complete(directory, 1:332)
rowsWeWant <- collectionOfCompleteCases[collectionOfCompleteCases[['nobs']] > threshold, ]
## filter2 <- collectionOfCompleteCases[nobs > threshold]
##rowsWeWant <- collectionOfCompleteCases[filter]
##print(filter)
##countOfCompleteCases <- length(collectionOfCompleteCases)
##vectorOutput <- vector("numeric", length = countOfCompleteCases)
## sorted.cors[sorted.cors[['Freq']] > 0.5 , ]
## print(rowsWeWant)
## print(nrow(rowsWeWant))
vectorOutput <- vector("numeric", length = nrow(rowsWeWant))
##for (i in seq_along(rowsWeWant)){
for (i in 1:nrow(rowsWeWant)){
## Open the file.
id <- rowsWeWant[i, "id"]
nameOfFile <- sprintf("%s\\%03d.csv", directory, id)
currentFile <- read.csv(nameOfFile)
## Let's figure out what columns we want.
## to-do: below seems non-optimal with memory usage.  Rewrite for efficiency in the future!
columnSulfate <- currentFile["sulfate"]
columnNitrate <- currentFile["nitrate"]
rowsCompleteCases <- complete.cases(columnSulfate, columnNitrate)
## rowsWeWant2 <- rowsCompleteCases[rowsCompleteCases == TRUE]
rowsWeWant2 <- currentFile[rowsCompleteCases, ]
ourvalue <- cor(rowsWeWant2[['sulfate']], rowsWeWant2[['nitrate']])
vectorOutput[i] <- ourvalue
## print(vectorOutput[i])
}
vectorOutput
## Example Output:
#   source("corr.R")
#   source("complete.R")
#   cr <- corr("specdata", 150)
#   head(cr)
#
#   ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.2110 -0.0500  0.0946  0.1250  0.2680  0.7630
#
#   cr <- corr("specdata", 400)
#   head(cr)
#
#   ## [1] -0.01896 -0.04390 -0.06816 -0.07589  0.76313 -0.15783
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.1760 -0.0311  0.1000  0.1400  0.2680  0.7630
#
#   cr <- corr("specdata", 5000)
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ##
#
#   length(cr)
#
#   ## [1] 0
#
#   cr <- corr("specdata")
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -1.0000 -0.0528  0.1070  0.1370  0.2780  1.0000
#
#   length(cr)
#
#   ## [1] 323
}
? source("corr.R")
source("corr.R")
setwd("C:/dev/coursera/R-Programming/Assignment1")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
collectionOfCompleteCases <- complete(directory, 1:332)
rowsWeWant <- collectionOfCompleteCases[collectionOfCompleteCases[['nobs']] > threshold, ]
## filter2 <- collectionOfCompleteCases[nobs > threshold]
##rowsWeWant <- collectionOfCompleteCases[filter]
##print(filter)
##countOfCompleteCases <- length(collectionOfCompleteCases)
##vectorOutput <- vector("numeric", length = countOfCompleteCases)
## sorted.cors[sorted.cors[['Freq']] > 0.5 , ]
## print(rowsWeWant)
## print(nrow(rowsWeWant))
vectorOutput <- vector("numeric", length = nrow(rowsWeWant))
if (nrow(rowsWeWant) != 0){
##for (i in seq_along(rowsWeWant)){
for (i in 1:nrow(rowsWeWant)){
## Open the file.
id <- rowsWeWant[i, "id"]
nameOfFile <- sprintf("%s\\%03d.csv", directory, id)
currentFile <- read.csv(nameOfFile)
## Let's figure out what columns we want.
## to-do: below seems non-optimal with memory usage.  Rewrite for efficiency in the future!
columnSulfate <- currentFile["sulfate"]
columnNitrate <- currentFile["nitrate"]
rowsCompleteCases <- complete.cases(columnSulfate, columnNitrate)
## rowsWeWant2 <- rowsCompleteCases[rowsCompleteCases == TRUE]
rowsWeWant2 <- currentFile[rowsCompleteCases, ]
ourvalue <- cor(rowsWeWant2[['sulfate']], rowsWeWant2[['nitrate']])
ourvalue <- round(ourvalue, digits=4)
vectorOutput[i] <- ourvalue
## print(vectorOutput[i])
}
}
vectorOutput
## Example Output:
#   source("corr.R")
#   source("complete.R")
#   cr <- corr("specdata", 150)
#   head(cr)
#
#   ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.2110 -0.0500  0.0946  0.1250  0.2680  0.7630
#
#   cr <- corr("specdata", 400)
#   head(cr)
#
#   ## [1] -0.01896 -0.04390 -0.06816 -0.07589  0.76313 -0.15783
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.1760 -0.0311  0.1000  0.1400  0.2680  0.7630
#
#   cr <- corr("specdata", 5000)
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ##
#
#   length(cr)
#
#   ## [1] 0
#
#   cr <- corr("specdata")
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -1.0000 -0.0528  0.1070  0.1370  0.2780  1.0000
#
#   length(cr)
#
#   ## [1] 323
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
collectionOfCompleteCases <- complete(directory, 1:332)
rowsWeWant <- collectionOfCompleteCases[collectionOfCompleteCases[['nobs']] > threshold, ]
## filter2 <- collectionOfCompleteCases[nobs > threshold]
##rowsWeWant <- collectionOfCompleteCases[filter]
##print(filter)
##countOfCompleteCases <- length(collectionOfCompleteCases)
##vectorOutput <- vector("numeric", length = countOfCompleteCases)
## sorted.cors[sorted.cors[['Freq']] > 0.5 , ]
## print(rowsWeWant)
## print(nrow(rowsWeWant))
vectorOutput <- vector("numeric", length = nrow(rowsWeWant))
if (nrow(rowsWeWant) != 0){
##for (i in seq_along(rowsWeWant)){
for (i in 1:nrow(rowsWeWant)){
## Open the file.
id <- rowsWeWant[i, "id"]
nameOfFile <- sprintf("%s\\%03d.csv", directory, id)
currentFile <- read.csv(nameOfFile)
## Let's figure out what columns we want.
## to-do: below seems non-optimal with memory usage.  Rewrite for efficiency in the future!
columnSulfate <- currentFile["sulfate"]
columnNitrate <- currentFile["nitrate"]
rowsCompleteCases <- complete.cases(columnSulfate, columnNitrate)
## rowsWeWant2 <- rowsCompleteCases[rowsCompleteCases == TRUE]
rowsWeWant2 <- currentFile[rowsCompleteCases, ]
ourvalue <- cor(rowsWeWant2[['sulfate']], rowsWeWant2[['nitrate']])
ourvalue <- round(ourvalue, digits=5)
vectorOutput[i] <- ourvalue
## print(vectorOutput[i])
}
}
vectorOutput
## Example Output:
#   source("corr.R")
#   source("complete.R")
#   cr <- corr("specdata", 150)
#   head(cr)
#
#   ## [1] -0.01896 -0.14051 -0.04390 -0.06816 -0.12351 -0.07589
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.2110 -0.0500  0.0946  0.1250  0.2680  0.7630
#
#   cr <- corr("specdata", 400)
#   head(cr)
#
#   ## [1] -0.01896 -0.04390 -0.06816 -0.07589  0.76313 -0.15783
#
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -0.1760 -0.0311  0.1000  0.1400  0.2680  0.7630
#
#   cr <- corr("specdata", 5000)
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ##
#
#   length(cr)
#
#   ## [1] 0
#
#   cr <- corr("specdata")
#   summary(cr)
#
#   ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#   ## -1.0000 -0.0528  0.1070  0.1370  0.2780  1.0000
#
#   length(cr)
#
#   ## [1] 323
}
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source("submitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
