training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric")
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
setwd("C:/dev/coursera/Data-Science-Cleaning-Data/class-project")
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric")
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
activity_labels <- read.table("dataset\\activity_labels.txt", colClasses=c("numeric", "character"), col.names=c("activity_id", "activity_name"))
library(sqldf)
test <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
View(test)
test$id = seq(along = test)
View(test)
test$id = seq(along = test[1])
View(test)
test$id = seq(along.with = test[1])
View(test)
len(test)
length(test)
nrow(test)
test$id = seq(1, nrow(test))
View(test)
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
View(training_subject)
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_label_descrip <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
View(training_label_descrip)
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = traning_data.id")
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = traning_data.id")
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = traning_data.id")
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = training_data.id")
View(training_all)
## Read in training data.
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric")
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Read in test data.
test_data <- read.table("dataset\\test\\X_test.txt", colClasses = "numeric")
test_labels <- read.table("dataset\\test\\y_test.txt", colClasses=c("numeric"), col.names=c("activity_id"))
test_subject <- read.table("dataset\\test\\subject_test.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Load the activities labels.
activity_labels <- read.table("dataset\\activity_labels.txt", colClasses=c("numeric", "character"), col.names=c("activity_id", "activity_name"))
## add the activities labels and merge up the training data.
training_label_descrip <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = training_data.id")
## add the activities labels and merge up the test data.
test_label_descrip <- sqldf("SELECT test_labels.activity_id, activity_name FROM test_labels LEFT JOIN activity_labels USING(activity_id)")
test_label_descrip$id = seq(1, nrow(test_label_descrip))
test_data$id = seq(1, nrow(test_labels))
test_subject$id = seq(1, nrow(test_subject))
test_all <- sqldf("SELECT test_subject.subject_id, test_label_descrip.activity_name, test_data.* FROM test_subject, test_label_descrip, test_data WHERE test_subject.id = test_label_descrip.id AND test_subject.id = test_data.id")
both_all <- rbind(training_all, test_all)
View(both_all)
features_labels <- read.table("dataset\\features.txt")
features_labels_transpose <- t(features_labels)
View(features_labels_transpose)
View(features_labels)
features_labels <- read.table("dataset\\features.txt")
features_labels <- features_labels[2]
features_labels <- t(features_labels)
View(features_labels)
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric", col.names=features_labels)
View(training_data)
## Required libraries/packages.
library(sqldf)
## Load the features labels.
features_labels <- read.table("dataset\\features.txt")
features_labels <- features_labels[2]
features_labels <- t(features_labels)
## Read in training data.
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric", col.names=features_labels)
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Read in test data.
test_data <- read.table("dataset\\test\\X_test.txt", colClasses = "numeric", col.names=features_labels)
test_labels <- read.table("dataset\\test\\y_test.txt", colClasses=c("numeric"), col.names=c("activity_id"))
test_subject <- read.table("dataset\\test\\subject_test.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Load the activities labels.
activity_labels <- read.table("dataset\\activity_labels.txt", colClasses=c("numeric", "character"), col.names=c("activity_id", "activity_name"))
## add the activities labels and merge up the training data.
training_label_descrip <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = training_data.id")
## add the activities labels and merge up the test data.
test_label_descrip <- sqldf("SELECT test_labels.activity_id, activity_name FROM test_labels LEFT JOIN activity_labels USING(activity_id)")
test_label_descrip$id = seq(1, nrow(test_label_descrip))
test_data$id = seq(1, nrow(test_labels))
test_subject$id = seq(1, nrow(test_subject))
test_all <- sqldf("SELECT test_subject.subject_id, test_label_descrip.activity_name, test_data.* FROM test_subject, test_label_descrip, test_data WHERE test_subject.id = test_label_descrip.id AND test_subject.id = test_data.id")
## Merge the training and test datasets.
both_all <- rbind(training_all, test_all)
View(both_all)
## Load the features labels.
features_labels_raw <- read.table("dataset\\features.txt")
features_labels <- features_labels_raw[2]
features_labels <- t(features_labels)
View(features_labels_raw)
View(features_labels_raw)
feature_labels_wewant <- sqldf("select * from feature_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
features_labels_raw <- read.table("dataset\\features.txt")
feature_labels_wewant <- sqldf("select * from feature_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
features_labels_wewant <- sqldf("select * from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
View(features_labels_wewant)
features_labels_raw <- read.table("dataset\\features.txt")
features_labels <- features_labels_raw[2]
features_labels <- t(features_labels)
features_labels_raw$colid <- seq(3, (nrow(features_labels_raw) + 2))
features_labels_wewant <- sqldf("select * from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
View(features_labels_wewant)
View(both_all)
View(features_labels_wewant)
features_labels_wewant <- sqldf("select colid from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
View(features_labels_wewant)
View(features_labels_wewant)
both_all_paired_down <- both_all[],feature_labels_wewant$colid]
both_all_paired_down <- both_all[,feature_labels_wewant$colid]
both_all_paired_down <- both_all[,features_labels_wewant$colid]
View(both_all_paired_down)
## Required libraries/packages.
library(sqldf)
## Load the features labels.
features_labels_raw <- read.table("dataset\\features.txt")
features_labels <- features_labels_raw[2]
features_labels <- t(features_labels)
##features_labels_raw$colid <- seq(3, (nrow(features_labels_raw) + 2))
features_labels_wewant <- sqldf("select V! from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
## Load the features labels.
features_labels_raw <- read.table("dataset\\features.txt")
features_labels <- features_labels_raw[2]
features_labels <- t(features_labels)
##features_labels_raw$colid <- seq(3, (nrow(features_labels_raw) + 2))
features_labels_wewant <- sqldf("select V1 from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
## Read in training data.
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric", col.names=features_labels)
training_data <- training_data[,feature_labels_wewant$V1]
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
View(training_data)
View(features_labels_wewant)
training_data <- training_data[,feature_labels_wewant$V1]
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric", col.names=features_labels)
training_data <- training_data[,features_labels_wewant$V1]
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
test_data <- read.table("dataset\\test\\X_test.txt", colClasses = "numeric", col.names=features_labels)
test_data <- test_data[,features_labels_wewant$V1]
test_labels <- read.table("dataset\\test\\y_test.txt", colClasses=c("numeric"), col.names=c("activity_id"))
test_subject <- read.table("dataset\\test\\subject_test.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Load the activities labels.
activity_labels <- read.table("dataset\\activity_labels.txt", colClasses=c("numeric", "character"), col.names=c("activity_id", "activity_name"))
## add the activities labels and merge up the training data.
training_label_descrip <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = training_data.id")
## add the activities labels and merge up the test data.
test_label_descrip <- sqldf("SELECT test_labels.activity_id, activity_name FROM test_labels LEFT JOIN activity_labels USING(activity_id)")
test_label_descrip$id = seq(1, nrow(test_label_descrip))
test_data$id = seq(1, nrow(test_labels))
test_subject$id = seq(1, nrow(test_subject))
test_all <- sqldf("SELECT test_subject.subject_id, test_label_descrip.activity_name, test_data.* FROM test_subject, test_label_descrip, test_data WHERE test_subject.id = test_label_descrip.id AND test_subject.id = test_data.id")
## Merge the training and test datasets.
both_all <- rbind(training_all, test_all)
View(both_all)
both_all$id = NULL
View(both_all)
View(both_all)
? write.table
foo <- summary(both_all)
summary(both_all)
? ftable
? xtabs
foo <- xtabs(subject_id ~ activity_name,data=both_all)
xtabs(subject_id ~ activity_name,data=both_all)
? aggregate
aggregate(both_all, mean)
aggregate(both_all, FUN=mean)
aggregate(both_all, FUN=mean, by=both_all$subject_id)
aggregate(both_all, FUN=mean, by=c(both_all$subject_id))
aggregate(both_all, FUN=mean, by=list(both_all$subject_id))
View(features_labels_wewant)
## Required libraries/packages.
library(sqldf)
## Load the features labels.
features_labels_raw <- read.table("dataset\\features.txt")
features_labels <- features_labels_raw[2]
features_labels <- t(features_labels)
##features_labels_raw$colid <- seq(3, (nrow(features_labels_raw) + 2))
features_labels_wewant <- sqldf("select V1 from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
## Read in training data.
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric", col.names=features_labels)
training_data <- training_data[,features_labels_wewant$V1]
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Read in test data.
test_data <- read.table("dataset\\test\\X_test.txt", colClasses = "numeric", col.names=features_labels)
test_data <- test_data[,features_labels_wewant$V1]
test_labels <- read.table("dataset\\test\\y_test.txt", colClasses=c("numeric"), col.names=c("activity_id"))
test_subject <- read.table("dataset\\test\\subject_test.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Load the activities labels.
activity_labels <- read.table("dataset\\activity_labels.txt", colClasses=c("numeric", "character"), col.names=c("activity_id", "activity_name"))
## add the activities labels and merge up the training data.
training_label_descrip <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = training_data.id")
## add the activities labels and merge up the test data.
test_label_descrip <- sqldf("SELECT test_labels.activity_id, activity_name FROM test_labels LEFT JOIN activity_labels USING(activity_id)")
test_label_descrip$id = seq(1, nrow(test_label_descrip))
test_data$id = seq(1, nrow(test_labels))
test_subject$id = seq(1, nrow(test_subject))
test_all <- sqldf("SELECT test_subject.subject_id, test_label_descrip.activity_name, test_data.* FROM test_subject, test_label_descrip, test_data WHERE test_subject.id = test_label_descrip.id AND test_subject.id = test_data.id")
## Merge the training and test datasets.
both_all <- rbind(training_all, test_all)
both_all$id = NULL
View(both_all)
foo <- aggregate(both_all, FUN=mean, by=list(both_all$subject_id, both_all$activity_name))
View(foo)
foo <- aggregate(both_all, FUN=mean, by=list(subject_id = both_all$subject_id, activty_name = both_all$activity_name))
View(foo)
both_summary <- aggregate(both_all, FUN=mean, by=list(subject = both_all$subject_id, activty = both_all$activity_name))
View(both_summary)
both_summary$subject_id = NULL
both_summary$activity_name = NULL
View(both_summary)
write.table(both_summary, file="tidydataset.txt" row.names=FALSE)
write.table(both_summary, file="tidydataset.txt", row.names=FALSE)
write.table(both_summary, file="tidydataset.txt", row.names=FALSE)
## Required libraries/packages.
library(sqldf)
## Load the features labels.
features_labels_raw <- read.table("dataset\\features.txt")
features_labels <- features_labels_raw[2]
features_labels <- t(features_labels)
features_labels_wewant <- sqldf("select V1 from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
## Read in training data.
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric", col.names=features_labels)
training_data <- training_data[,features_labels_wewant$V1]
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Read in test data.
test_data <- read.table("dataset\\test\\X_test.txt", colClasses = "numeric", col.names=features_labels)
test_data <- test_data[,features_labels_wewant$V1]
test_labels <- read.table("dataset\\test\\y_test.txt", colClasses=c("numeric"), col.names=c("activity_id"))
test_subject <- read.table("dataset\\test\\subject_test.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Load the activities labels.
activity_labels <- read.table("dataset\\activity_labels.txt", colClasses=c("numeric", "character"), col.names=c("activity_id", "activity_name"))
## add the activities labels and merge up the training data.
training_label_descrip <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = training_data.id")
## add the activities labels and merge up the test data.
test_label_descrip <- sqldf("SELECT test_labels.activity_id, activity_name FROM test_labels LEFT JOIN activity_labels USING(activity_id)")
test_label_descrip$id = seq(1, nrow(test_label_descrip))
test_data$id = seq(1, nrow(test_labels))
test_subject$id = seq(1, nrow(test_subject))
test_all <- sqldf("SELECT test_subject.subject_id, test_label_descrip.activity_name, test_data.* FROM test_subject, test_label_descrip, test_data WHERE test_subject.id = test_label_descrip.id AND test_subject.id = test_data.id")
## Merge the training and test datasets.
both_all <- rbind(training_all, test_all)
both_all$id = NULL
## Create a summary table that averages each variable for each subject/activity.
both_summary <- aggregate(both_all, FUN=mean, by=list(subject = both_all$subject_id, activity = both_all$activity_name))
both_summary$subject_id = NULL
both_summary$activity_name = NULL
## Output the new combined table
write.table(both_summary, file="tidydataset.txt", row.names=FALSE, append=FALSE)
foo <- aggregate(both_all, FUN=mean, by=list(subject_id = both_all$subject_id, activty_name = both_all$activity_name))
## Required libraries/packages.
library(sqldf)
## Load the features labels.
features_labels_raw <- read.table("dataset\\features.txt")
features_labels <- features_labels_raw[2]
features_labels <- t(features_labels)
features_labels_wewant <- sqldf("select V1 from features_labels_raw where V2 LIKE '%mean()%' OR V2 LIKE '%std()'")
## Read in training data.
training_data <- read.table("dataset\\train\\X_train.txt", colClasses = "numeric", col.names=features_labels)
training_data <- training_data[,features_labels_wewant$V1]
training_labels <- read.table("dataset\\train\\y_train.txt", colClasses=c("numeric"), col.names=c("activity_id"))
training_subject <- read.table("dataset\\train\\subject_train.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Read in test data.
test_data <- read.table("dataset\\test\\X_test.txt", colClasses = "numeric", col.names=features_labels)
test_data <- test_data[,features_labels_wewant$V1]
test_labels <- read.table("dataset\\test\\y_test.txt", colClasses=c("numeric"), col.names=c("activity_id"))
test_subject <- read.table("dataset\\test\\subject_test.txt", colClasses=c("numeric"), col.names=c("subject_id"))
## Load the activities labels.
activity_labels <- read.table("dataset\\activity_labels.txt", colClasses=c("numeric", "character"), col.names=c("activity_id", "activity_name"))
## add the activities labels and merge up the training data.
training_label_descrip <- sqldf("SELECT training_labels.activity_id, activity_name FROM training_labels LEFT JOIN activity_labels USING(activity_id)")
training_label_descrip$id = seq(1, nrow(training_label_descrip))
training_data$id = seq(1, nrow(training_labels))
training_subject$id = seq(1, nrow(training_subject))
training_all <- sqldf("SELECT training_subject.subject_id, training_label_descrip.activity_name, training_data.* FROM training_subject, training_label_descrip, training_data WHERE training_subject.id = training_label_descrip.id AND training_subject.id = training_data.id")
## add the activities labels and merge up the test data.
test_label_descrip <- sqldf("SELECT test_labels.activity_id, activity_name FROM test_labels LEFT JOIN activity_labels USING(activity_id)")
test_label_descrip$id = seq(1, nrow(test_label_descrip))
test_data$id = seq(1, nrow(test_labels))
test_subject$id = seq(1, nrow(test_subject))
test_all <- sqldf("SELECT test_subject.subject_id, test_label_descrip.activity_name, test_data.* FROM test_subject, test_label_descrip, test_data WHERE test_subject.id = test_label_descrip.id AND test_subject.id = test_data.id")
## Merge the training and test datasets.
both_all <- rbind(training_all, test_all)
both_all$id = NULL
## Create a summary table that averages each variable for each subject/activity.
both_summary <- aggregate(both_all, FUN=mean, by=list(subject = both_all$subject_id, activity = both_all$activity_name))
both_summary$subject_id = NULL
both_summary$activity_name = NULL
## Output the new combined table
write.table(both_summary, file="tidydataset.txt", row.names=FALSE, append=FALSE)
View(both_summary)
